name: Build - Pull Request

on: [pull_request]

jobs:
  build:
    timeout-minutes: 20
    permissions:
      contents: read
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            targets: ["x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu"]
            dependencies: |
              sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
          - os: macos-latest
            targets: ["x86_64-apple-darwin", "aarch64-apple-darwin"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4.2.2

      - name: Rust setup
        uses: dtolnay/rust-toolchain@1ff72ee08e3cb84d84adba594e0a297990fc1ed3

      - name: Rust cache
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0
        with:
          shared-key: "build-${{ matrix.os }}"

      - name: Install dependencies
        if: matrix.dependencies != ''
        run: ${{ matrix.dependencies }}

      - name: Add targets
        run: |
          for target in ${{ join(matrix.targets, ' ') }}; do
            rustup target add $target
          done

      - name: Build targets
        run: |
          for target in ${{ join(matrix.targets, ' ') }}; do
            cargo build --release --target $target
          done

      - name: Clean up
        run: rm -rf target
