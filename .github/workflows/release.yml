name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v*

jobs:
  release:
    timeout-minutes: 20
    permissions:
      contents: write
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-20.04
            targets: ["x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu"]
            dependencies: |
              sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
          - os: macos-latest
            targets: ["x86_64-apple-darwin", "aarch64-apple-darwin"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@f0deed1e0edfc6a9be95417288c0e1099b1eeec3
        with:
          shared-key: "release-${{ matrix.os }}"

      - name: Install dependencies
        if: matrix.dependencies != ''
        run: ${{ matrix.dependencies }}

      - name: Add targets
        run: |
          for target in ${{ join(matrix.targets, ' ') }}; do
            rustup target add $target
          done

      - name: Build targets
        run: |
          for target in ${{ join(matrix.targets, ' ') }}; do
            cargo build --release --target $target
          done

      - name: Prepare release artifacts
        run: |
          mkdir -p artifacts
          for target in ${{ join(matrix.targets, ' ') }}; do
            target_name=$(echo $target | tr '-' '_')
            cp "target/$target/release/sm" "artifacts/secrets-machine_${target_name}"
          done

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: artifacts/secrets-machine_*

      - name: Clean up
        run: rm -rf artifacts
